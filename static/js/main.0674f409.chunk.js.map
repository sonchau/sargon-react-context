{"version":3,"sources":["components/Layout.js","components/Header.js","context/createDataContext.js","context/PhotoContext.js","api/flickr.js","components/SearchForm.js","components/PhotoListItem.js","components/PhotoList.js","components/Main.js","components/Footer.js","CreateGlobalStyles.js","App.js","serviceWorker.js","index.js"],"names":["LayoutStyled","styled","div","Layout","children","HeaderStyled","header","Header","props","headerText","reducer","actions","defaultValue","Context","React","createContext","Provider","useReducer","state","dispatch","boundActions","key","value","createDataContext","action","type","payload","fetchPhotos","tags","a","endpoint","fetchJsonp","jsonpCallback","timeout","then","response","json","items","Error","SearchFormStyled","SearchInputStyled","input","SearchHeadingStyled","h2","SearchIcon","img","SearchButton","button","SearchForm","useContext","PhotoContext","useState","setTags","placeholder","className","onChange","e","target","debounce","src","process","ItemStyled","li","ImageStyled","ContentStyled","p","PhotoListItem","rel","href","link","title","media","m","alt","author","split","PhotoListStyled","ul","PhotoList","map","item","index","MainStyled","main","Main","mainText","footer","NavStyled","nav","Footer","user","CreateGlobalStyle","createGlobalStyle","App","CreateGlobalStyles","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0674f409.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\";\n\n\nconst LayoutStyled = styled.div`\n  display: grid;\n  //grid-template-rows: 10rem minmax(min-content, 80vh) 6rem;\n  grid-template-rows: auto minmax(70vh, 1fr) auto;\n`;\n\nconst Layout = ({ children }) => {\n  return (\n    <LayoutStyled>\n    {children}\n  </LayoutStyled>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from \"styled-components\";\n\nconst HeaderStyled = styled.header`\n  font-size: 3.5em;\n  padding: 3rem;\n  text-align: center;\n  background: #101d2c;\n  color: #fff;\n`;\n\nconst Header = props => (\n  <HeaderStyled>\n    <p>{props.headerText}</p>\n  </HeaderStyled>\n)\n\nHeader.propTypes = {\n  headerText: PropTypes.string\n}\n\nexport default Header\n","import React, { useReducer } from 'react';\n\nexport default (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","import createDataContext from './createDataContext';\nimport {FLICKR_API} from '../api/flickr';\nimport fetchJsonp from 'fetch-jsonp';\n\nconst flickrReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetch_photos':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst fetchPhotos = dispatch => async (tags) => {\n\n  try {\n    const endpoint = `${FLICKR_API}&tags=${tags}`;\n    const response = await fetchJsonp(endpoint, {\n      jsonpCallback: 'jsoncallback',\n      timeout: 3000\n    }).then(response => response.json())\n    //console.log('response', response)\n    dispatch({ type: 'fetch_photos', payload: response.items });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n\nexport const { Provider, Context } = createDataContext(\n  flickrReducer,\n  { fetchPhotos },\n  []\n);\n","export const FLICKR_API =\n  'https://api.flickr.com/services/feeds/photos_public.gne?format=json&tagmode=any';\n","import React, {useState, useContext} from 'react'\nimport { Context as PhotoContext } from '../context/PhotoContext';\nimport styled from \"styled-components\";\n//import { ReactComponent as Logo } from '../../public/SVG/search.svg';\nimport { debounce } from \"throttle-debounce\";\n\nconst SearchFormStyled = styled.div`\n    flex: 0 0 40%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 2rem;\n`;\n\nconst SearchInputStyled = styled.input`\n    font-family: inherit;\n    font-size: inherit;\n    color: inherit;\n    background-color: #f4f2f2;\n    border: none;\n    padding: .7rem 2rem;\n    border-radius: 100px;\n    width: 90%;\n    transition: all .2s;\n    height: 4rem;\n    line-height: 4rem;\n    margin-right: -3.25rem;\n    &:focus {\n        outline: none;\n      width: 100%;\n      background-color: #f0eeee;\n    }\n    &::-webkit-input-placeholder {\n        font-weight: 100;\n        color: #ccc; \n    }\n`;\n\nconst SearchHeadingStyled = styled.h2`\n    font-size: 3rem;\n    font-weight: 400;\n    text-align: center;\n    padding: 2rem;\n`;\n\nconst SearchIcon = styled.img`\n    height: 2rem;\n    width: 2rem;\n    fill: #999; \n`;\n\nconst SearchButton = styled.button`\n    border: none;\n    background-color: #f4f2f2;\n    .&:focus {\n        outline: none; \n    }\n    &:active {\n        transform: translateY(2px); \n    }\n`;\nconst SearchForm = () => {\n    const {fetchPhotos} = useContext(PhotoContext)\n    const [tags, setTags] = useState('')\n    const onTagsChange = (e) => {\n        setTags(e.target.value)\n        debounce(500,fetchPhotos(e.target.value))\n    }\n\n    return  (\n        <>\n            <SearchHeadingStyled>Please enter tag to search</SearchHeadingStyled>\n            <SearchFormStyled>\n                <SearchInputStyled\n                    type=\"text\"\n                    placeholder=\"Tags\"\n                    className=\"text-input\"\n                    value={tags}\n                    onChange={onTagsChange}\n                />\n                <SearchButton>\n                    <SearchIcon src={process.env.PUBLIC_URL + '/search.png'} />\n                </SearchButton>\n                \n            </SearchFormStyled>\n        </>\n    )\n}\n\nexport default SearchForm\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\";\n\n\nconst ItemStyled = styled.li`\n   padding: 1rem;\n   background: #f9f7f6;\n   border-radius: 1rem;\n   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n   transition: transform .3s;\n   &:hover {\n    transform: translateY(-1rem) scale(1.03); \n    }\n`;\nconst ImageStyled = styled.img`\n    width: 100%;\n    height: auto;\n    padding-bottom: 1rem;\n`;\n\n// const TitleStyled = styled.p`\n//     z-index: 3;\n//     width: 80%;\n//     font-size: 1.6rem;\n//     text-align: center;\n//     padding: 1.25rem;\n//     background-color: #101d2c;\n//     color: #fff;\n//     font-weight: 400;\n//     margin: 0 auto;\n//     transform: translateY(-70%);\n//     grid-area: title;\n \n// `;\n\n// const ContentContainerStyled = styled.div`\n// grid-area: content;\n// `;\n\nconst ContentStyled = styled.p`\n    font-size: 1.5rem;\n    font-family: \"Josefin Sans\", sans-serif;\n    margin: 0 1rem 0.5rem;\n    color: #c69963;\n`;\nconst PhotoListItem = ({props}) => {\n    //const { link, title, src } = image;\n    return  (\n    <ItemStyled>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link} title={props.title}>\n            <ImageStyled src={props.media.m} alt={props.title}/>\n        </a>\n        <ContentStyled><strong>Title:</strong> {props.title}</ContentStyled> \n        <ContentStyled><strong>Author:</strong> {props.author.split('\"')[1]}</ContentStyled>\n        <ContentStyled><strong>Tags:</strong> {props.tags}</ContentStyled>        \n    </ItemStyled>\n    )\n}\n\nPhotoListItem.propTypes = {\n    author: PropTypes.string,\n    author_id: PropTypes.string,\n    date_taken: PropTypes.string,\n    description: PropTypes.string,\n    link: PropTypes.string,\n    media: PropTypes.object,\n    published: PropTypes.string,\n    tags: PropTypes.string,\n    title: PropTypes.string\n  }\n\nexport default PhotoListItem\n\n\n","import React, {useContext} from 'react'\nimport { Context as PhotoContext } from '../context/PhotoContext'\nimport PhotoListItem from './PhotoListItem'\nimport styled from \"styled-components\";\n\nconst PhotoListStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n  grid-gap: 3rem;\n  list-style: none;\n`;\n\nconst PhotoList = () => {\n    const {state} = useContext(PhotoContext)\n    //console.log('state in photo list', state)\n    return  (\n        <PhotoListStyled>\n            {state.map((item, index) => {\n                return <PhotoListItem key={index} props={item}/>\n            })}\n        </PhotoListStyled>\n    )\n}\n\nexport default PhotoList\n\n\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport SearchFrom from './SearchForm'\nimport PhotoList from './PhotoList'\nimport styled from \"styled-components\";\n\nconst MainStyled = styled.main`\n  padding: 2rem;\n`;\n\nconst Main = props => (\n  <MainStyled>\n    <p>{props.mainText}</p>\n    <SearchFrom />\n    <PhotoList />\n  </MainStyled>\n)\n\nMain.propTypes = {\n  mainText: PropTypes.string\n}\n\nexport default Main\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\";\n\n\n\n\nconst HeaderStyled = styled.footer`\n    font-size: 1.5em;\n    padding: 2rem;\n    text-align: center;\n    background: #101d2c;\n    color: #fff;\n`;\nconst NavStyled = styled.nav`\n    list-style: none;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\n    grid-gap: 2rem;\n    align-items: center; \n    a {\n        font-size: 1.4rem;\n        color: #fff;\n        text-decoration: none;\n        font-family: \"Josefin Sans\", sans-serif;\n        text-transform: uppercase;\n        text-align: center;\n        padding: 1.5rem;\n        display: block;\n        transition: all .2s;\n        &:hover,\n        &:active {\n            background-color: rgba(255, 255, 255, 0.05);\n            transform: translateY(-3px); \n        }\n    }\n`;\n\nconst Footer = (props) => (\n    <HeaderStyled>\n        <NavStyled>\n            <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/sonchau/sargon-react-context\">Repos</a></li>\n            <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/sonnchau/\">Linkedin</a></li>\n        </NavStyled>\n        <p className=\"copyright\">&copy; {props.user}.</p>\n    </HeaderStyled>\n)\n\nFooter.propTypes = {\n    user: PropTypes.string,\n    link: PropTypes.string,\n    linkText: PropTypes.string\n}\n\nexport default Footer\n","import { createGlobalStyle } from \"styled-components\";\n\nconst CreateGlobalStyle = createGlobalStyle`\n\n  *,\n  *::before,\n  *::after {\n      margin: 0;\n      padding: 0;\n      box-sizing: inherit;\n  }\n\n  html \n  {\n      font-size: 62.5%;\n      box-sizing: border-box;\n  }\n\n  body {\n      background: #fff;\n      font-family: \"Nunito\", sans-serif;\n      font-style: normal;\n      font-weight: 400;\n      min-height: 100vh;\n      line-height: 1.4;\n  }\n`;\n\nexport default CreateGlobalStyle;\n","import React from 'react';\n\nimport Layout from './components/Layout'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\nimport CreateGlobalStyles from \"./CreateGlobalStyles\"\n\nimport { Provider as PhotoProvider } from './context/PhotoContext';\n\nfunction App() {\n  return (\n    <PhotoProvider>\n      <CreateGlobalStyles />\n        <Layout>\n          <Header headerText=\"Sargon coding challenge\" />\n          <Main />\n          <Footer user=\"Copyright 2020 by Son Chau\" />\n        </Layout>\n    </PhotoProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}